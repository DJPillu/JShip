package jship;

import java.awt.GridLayout;
import java.awt.event.*;
import javax.swing.*;
import stats.Stats;


/**
 * Form for viewing the statistics of the current user.
 *
 * @author blackk100
 */
public class ViewStats extends JFrame {
	private String UName;
	private String mode;
	private int diff;
	private int mdI; // See Stats.statsLists and Stats.Acc 1-Dimensional Index Documentation

	/**
	 * Creates new form Statistics
	 */
	public ViewStats() {
		this.initComponents();

		this.updateCurrentUser();
		this.mode = this.ModeBG.getSelection().getActionCommand();
		String difficulty = this.DifficultyBG.getSelection().getActionCommand();
		this.diff = difficulty.equals("B") ? 2 : (difficulty.equals("R") ? 1 : 0);
		this.userStatsSetter();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    ModeBG = new ButtonGroup();
    DifficultyBG = new ButtonGroup();
    TitleP = new JPanel();
    TitleL = new JLabel();
    CurrentUserL = new JLabel();
    UserTF = new JTextField();
    ModeL = new JLabel();
    ModeP = new JPanel();
    ClassRB = new JRadioButton();
    SalvoRB = new JRadioButton();
    DifficultyL = new JLabel();
    DifficultyP = new JPanel();
    EasyRB = new JRadioButton();
    MediumRB = new JRadioButton();
    HardRB = new JRadioButton();
    GoBackB = new JButton();
    StatsP = new JPanel();
    GPL = new JLabel();
    GPTF = new JTextField();
    GWL = new JLabel();
    GWTF = new JTextField();
    GLL = new JLabel();
    GLTF = new JTextField();
    SFL = new JLabel();
    SFTF = new JTextField();
    HitsL = new JLabel();
    HitsTF = new JTextField();
    AccL = new JLabel();
    AccTF = new JTextField();
    THL = new JLabel();
    THTF = new JTextField();
    SSL = new JLabel();
    SSTF = new JTextField();
    SLL = new JLabel();
    SLTF = new JTextField();

    setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    setTitle("Statistics");
    setResizable(false);

    TitleL.setHorizontalAlignment(SwingConstants.CENTER);
    TitleL.setText("Statistics");

    CurrentUserL.setLabelFor(UserTF);
    CurrentUserL.setText("Viewing Stats of:");

    UserTF.setEditable(false);

    ModeL.setText("Game Mode:");

    ModeP.setLayout(new GridLayout(1, 2));

    ModeBG.add(ClassRB);
    ClassRB.setSelected(true);
    ClassRB.setText("Classic");
    ClassRB.setActionCommand("C");
    ClassRB.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        ModeChanged(evt);
      }
    });
    ModeP.add(ClassRB);

    ModeBG.add(SalvoRB);
    SalvoRB.setText("Salvo");
    SalvoRB.setActionCommand("S");
    SalvoRB.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        ModeChanged(evt);
      }
    });
    ModeP.add(SalvoRB);

    DifficultyL.setText("AI Difficulty:");

    DifficultyP.setLayout(new GridLayout(1, 3));

    DifficultyBG.add(EasyRB);
    EasyRB.setSelected(true);
    EasyRB.setText("Sandbox");
    EasyRB.setActionCommand("S");
    EasyRB.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        DifficultyChanged(evt);
      }
    });
    DifficultyP.add(EasyRB);

    DifficultyBG.add(MediumRB);
    MediumRB.setText("Realistic");
    MediumRB.setActionCommand("R");
    MediumRB.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        DifficultyChanged(evt);
      }
    });
    DifficultyP.add(MediumRB);

    DifficultyBG.add(HardRB);
    HardRB.setText("Brutal");
    HardRB.setActionCommand("B");
    HardRB.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        DifficultyChanged(evt);
      }
    });
    DifficultyP.add(HardRB);

    GoBackB.setText("Go Back");
    GoBackB.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        GoBack(evt);
      }
    });

    GroupLayout TitlePLayout = new GroupLayout(TitleP);
    TitleP.setLayout(TitlePLayout);
    TitlePLayout.setHorizontalGroup(TitlePLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(TitlePLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(TitlePLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
          .addComponent(TitleL, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(TitlePLayout.createSequentialGroup()
            .addComponent(CurrentUserL)
            .addGap(18, 18, 18)
            .addComponent(UserTF, GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE))
          .addGroup(GroupLayout.Alignment.TRAILING, TitlePLayout.createSequentialGroup()
            .addGroup(TitlePLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
              .addComponent(ModeL, GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
              .addComponent(DifficultyL, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(18, 18, 18)
            .addGroup(TitlePLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
              .addComponent(ModeP, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(DifficultyP, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        .addContainerGap())
      .addGroup(TitlePLayout.createSequentialGroup()
        .addGap(175, 175, 175)
        .addComponent(GoBackB)
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    TitlePLayout.setVerticalGroup(TitlePLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(TitlePLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(TitleL)
        .addGap(18, 18, 18)
        .addGroup(TitlePLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
          .addComponent(CurrentUserL)
          .addComponent(UserTF, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(TitlePLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
          .addComponent(ModeP, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(ModeL, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(TitlePLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
          .addComponent(DifficultyP, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(DifficultyL, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(GoBackB)
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    GPL.setLabelFor(GPTF);
    GPL.setText("Games Played:");

    GPTF.setEditable(false);

    GWL.setLabelFor(SFTF);
    GWL.setText("Games Won:");

    GWTF.setEditable(false);

    GLL.setLabelFor(SFTF);
    GLL.setText("Games Lost:");

    GLTF.setEditable(false);

    SFL.setLabelFor(SFTF);
    SFL.setText("Shots Fired:");

    SFTF.setEditable(false);

    HitsL.setLabelFor(HitsTF);
    HitsL.setText("Hits:");

    HitsTF.setEditable(false);

    AccL.setLabelFor(AccTF);
    AccL.setText("Accuracy:");

    AccTF.setEditable(false);

    THL.setLabelFor(THTF);
    THL.setText("Times Hit:");

    THTF.setEditable(false);

    SSL.setLabelFor(SSTF);
    SSL.setText("Ships Sunk:");

    SSTF.setEditable(false);

    SLL.setLabelFor(SLTF);
    SLL.setText("Ships Lost:");

    SLTF.setEditable(false);

    GroupLayout StatsPLayout = new GroupLayout(StatsP);
    StatsP.setLayout(StatsPLayout);
    StatsPLayout.setHorizontalGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(StatsPLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
          .addComponent(GLL, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(GWL, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(GPL, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(SFL, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(HitsL, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(AccL, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(THL, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(SSL, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(SLL, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGap(18, 18, 18)
        .addGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
          .addComponent(GWTF, GroupLayout.Alignment.TRAILING)
          .addComponent(GPTF, GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
          .addComponent(HitsTF)
          .addComponent(AccTF)
          .addComponent(THTF)
          .addComponent(SSTF)
          .addComponent(SLTF)
          .addComponent(GLTF)
          .addComponent(SFTF))
        .addContainerGap())
    );
    StatsPLayout.setVerticalGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(StatsPLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
          .addComponent(GPL)
          .addComponent(GPTF, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
          .addComponent(GWTF, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
          .addComponent(GWL))
        .addGap(18, 18, 18)
        .addGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
          .addComponent(GLL)
          .addComponent(GLTF, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
          .addComponent(SFL)
          .addComponent(SFTF, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
          .addComponent(HitsL)
          .addComponent(HitsTF, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
          .addComponent(AccL)
          .addComponent(AccTF, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
          .addComponent(THL)
          .addComponent(THTF, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
          .addComponent(SSL)
          .addComponent(SSTF, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(StatsPLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
          .addComponent(SLL)
          .addComponent(SLTF, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
          .addComponent(StatsP, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(TitleP, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(TitleP, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(StatsP, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

	/**
	 * Updates the current user. Called after every button.
	 */
	private void updateCurrentUser() {
		this.UName = users.CurrentUser.GetCurrentUser();
		UserTF.setText(this.UName);
	}

	/**
	 * Gets the current user's statistics and sets the TextFields to display them.
	 */
	private void userStatsSetter() {
		this.mdI = (this.mode.equals("S") ? 3 : 0) + this.diff;

		Stats stats = new Stats(this.UName);
		int[][] userStats = stats.getStatsLists();
		float[] Acc = stats.getAcc();

		GPTF.setText("" + userStats[mdI][0]);
		GWTF.setText("" + userStats[mdI][1]);
		GLTF.setText("" + userStats[mdI][2]);
		SFTF.setText("" + userStats[mdI][3]);
		HitsTF.setText("" + userStats[mdI][4]);
		AccTF.setText("" + Acc[mdI] + " %");
		THTF.setText("" + userStats[mdI][5]);
		SSTF.setText("" + userStats[mdI][6]);
		SLTF.setText("" + userStats[mdI][7]);
	}

	/**
	 * Goes back to the main frame.
	 *
	 * @param evt
	 */
	private void GoBack(ActionEvent evt) {//GEN-FIRST:event_GoBack
		JShip JShip = new JShip(); // Creates the JShip Form object
		JShip.setVisible(true);	  // Makes the JShip Form to be visible

		this.dispose();            // Destroys the current form object
	}//GEN-LAST:event_GoBack

	/**
	 * Changes the Statistics display on changing the difficulty level
	 *
	 * @param evt
	 */
	private void DifficultyChanged(ActionEvent evt) {//GEN-FIRST:event_DifficultyChanged
		String difficulty = this.DifficultyBG.getSelection().getActionCommand();
		this.diff = difficulty.equals("B") ? 2 : (difficulty.equals("R") ? 1 : 0);
		this.userStatsSetter();
	}//GEN-LAST:event_DifficultyChanged

	/**
	 * Changes the Statistics display on changing the game mode level
	 *
	 * @param evt
	 */
	private void ModeChanged(ActionEvent evt) {//GEN-FIRST:event_ModeChanged
		this.mode = this.ModeBG.getSelection().getActionCommand();
		this.userStatsSetter();
	}//GEN-LAST:event_ModeChanged

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JLabel AccL;
  private JTextField AccTF;
  private JRadioButton ClassRB;
  private JLabel CurrentUserL;
  private ButtonGroup DifficultyBG;
  private JLabel DifficultyL;
  private JPanel DifficultyP;
  private JRadioButton EasyRB;
  private JLabel GLL;
  private JTextField GLTF;
  private JLabel GPL;
  private JTextField GPTF;
  private JLabel GWL;
  private JTextField GWTF;
  private JButton GoBackB;
  private JRadioButton HardRB;
  private JLabel HitsL;
  private JTextField HitsTF;
  private JRadioButton MediumRB;
  private ButtonGroup ModeBG;
  private JLabel ModeL;
  private JPanel ModeP;
  private JLabel SFL;
  private JTextField SFTF;
  private JLabel SLL;
  private JTextField SLTF;
  private JLabel SSL;
  private JTextField SSTF;
  private JRadioButton SalvoRB;
  private JPanel StatsP;
  private JLabel THL;
  private JTextField THTF;
  private JLabel TitleL;
  private JPanel TitleP;
  private JTextField UserTF;
  // End of variables declaration//GEN-END:variables
}
