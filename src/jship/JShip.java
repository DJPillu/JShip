package jship;

import game.Pre;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.*;
import javax.swing.*;
import users.CurrentUser;


/**
 * Main form that runs when the program is started
 *
 * @author blackk100
 */
public final class JShip extends JFrame {

	/**
	 * Creates new form JShip
	 */
	public JShip() {
		this.initComponents();
		UserTF.setText(CurrentUser.getCurrentUser());
		this.setLocationRelativeTo(null);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    Help1 = new JPanel();
    jLabel1 = new JLabel();
    Help2 = new JPanel();
    jLabel2 = new JLabel();
    Help3 = new JPanel();
    jLabel3 = new JLabel();
    HomeP = new JPanel();
    TitleP = new JPanel();
    TitleL = new JLabel();
    UserL = new JLabel();
    UserTF = new JTextField();
    ButtonP = new JPanel();
    UserB = new JButton();
    Spacer1L = new JLabel();
    StatsB = new JButton();
    Spacer2L = new JLabel();
    PlayB = new JButton();
    Spacer3L = new JLabel();
    HelpB = new JButton();
    Spacer4L = new JLabel();
    ExitB = new JButton();

    jLabel1.setFont(new Font("Tahoma", 0, 12)); // NOI18N
    jLabel1.setText("<html> <body> The game provides you with multiple options that can be altered including grid size, game mode, difficulty and different types  of ships.<br><br>  1. Grid Size - Default is 10*10 grid size and 15*15 can also be  selected. <br><br>  2. Game Mode - There is classic which allows the players to shoot one shot in each round. <br> While in Salvo, the number of shot a player gets is equal to the number of unsunk ships that they still have.<br><br>  3. Ship Available - There are 4 different ships available and they vary in size and number. <br> (i)Battleship   - Lenght = 5 tiles, Number = 1.<br> (ii)Cruisers    - Lenght = 4 tiles, Number = 2.<br> (iii)Destroyers - Lenght = 3 tiles, Number = 3.<br> (iv)Corvettes   - Lenght = 2 tiles, Number = 4.<br><br>   </body> </html>");

    GroupLayout Help1Layout = new GroupLayout(Help1);
    Help1.setLayout(Help1Layout);
    Help1Layout.setHorizontalGroup(Help1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(Help1Layout.createSequentialGroup()
        .addGap(22, 22, 22)
        .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 322, GroupLayout.PREFERRED_SIZE)
        .addContainerGap(24, Short.MAX_VALUE))
    );
    Help1Layout.setVerticalGroup(Help1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(GroupLayout.Alignment.TRAILING, Help1Layout.createSequentialGroup()
        .addContainerGap(31, Short.MAX_VALUE)
        .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 313, GroupLayout.PREFERRED_SIZE)
        .addGap(25, 25, 25))
    );

    jLabel2.setFont(new Font("Tahoma", 0, 12)); // NOI18N
    jLabel2.setText("<html> <body>  Between the grids assigned to the two players, there is a number of components that describe the settings selected by the user.<br><br>  Below that there is a textarea which logs the events happening throughout the match such as ship placement and also prompts if the user is doing something that is not allowed.<br><br>  Always keep a check on this to know what's going on at any time.<br><br>start/next round/end button - This button can firstly, be  used to start the match after placing ships, secondly, to  enter the next round and lastly to end the match(when someone wins) and move on to the post game stats screen.<br><br>  Clear Alters button - Clears the log in the alters textarea. <br><br>  Exit button  - quits the match and returns the user to main screen     </body>  </html>");

    GroupLayout Help2Layout = new GroupLayout(Help2);
    Help2.setLayout(Help2Layout);
    Help2Layout.setHorizontalGroup(Help2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(Help2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 340, GroupLayout.PREFERRED_SIZE)
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    Help2Layout.setVerticalGroup(Help2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(Help2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 333, GroupLayout.PREFERRED_SIZE)
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jLabel3.setText("<html> <body> The ships can placed on the grid by clicking on a tile, by default the ships are placed horizontally towards the right from the selected tile.<br>  If you want to place the ships vertically downwards, then  shift/control + click on the tile you wish to start from.<br>  Check the textarea for which ship is placed.<br>  A placed ship or a shot can be removed by clicking on the tile once again. <br><br>  Tile color indication:<br> Sky/Light blue - Empty water<br> Yellow - Selected tile/tiles<br> Light grey - Ship border(only shown in placement round)<br> Dark grey - Placed ships<br> Dark blue - A missed shot<br> Red - Shot that hit the enemy ship<br><br>  Rules:<br> 1. No two ships can touch each other head on or horizontally but they can diagonally(the area is indicated around the ship in light grey border).<br>  2. After you have selected a tiles on the enemy grid, Click next  round to continue to the next round.<br>  3. Game ends when all of the ships of either one of the players are sunk.  4. From there, the user can play another match or exit to main menue.  </body> </html>");

    GroupLayout Help3Layout = new GroupLayout(Help3);
    Help3.setLayout(Help3Layout);
    Help3Layout.setHorizontalGroup(Help3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(Help3Layout.createSequentialGroup()
        .addGap(25, 25, 25)
        .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 343, GroupLayout.PREFERRED_SIZE)
        .addContainerGap(24, Short.MAX_VALUE))
    );
    Help3Layout.setVerticalGroup(Help3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(Help3Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 385, GroupLayout.PREFERRED_SIZE)
        .addContainerGap(35, Short.MAX_VALUE))
    );

    setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    setTitle("JShip");
    setResizable(false);

    TitleL.setHorizontalAlignment(SwingConstants.CENTER);
    TitleL.setText("JShip");

    UserL.setLabelFor(UserTF);
    UserL.setText("Current User:");

    UserTF.setEditable(false);

    GroupLayout TitlePLayout = new GroupLayout(TitleP);
    TitleP.setLayout(TitlePLayout);
    TitlePLayout.setHorizontalGroup(TitlePLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(TitlePLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(TitlePLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
          .addComponent(TitleL, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(TitlePLayout.createSequentialGroup()
            .addComponent(UserL)
            .addGap(18, 18, 18)
            .addComponent(UserTF)))
        .addContainerGap())
    );
    TitlePLayout.setVerticalGroup(TitlePLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(TitlePLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(TitleL)
        .addGap(18, 18, 18)
        .addGroup(TitlePLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
          .addComponent(UserL)
          .addComponent(UserTF, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    ButtonP.setLayout(new GridLayout(3, 3, 10, 10));

    UserB.setText("User Management");
    UserB.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        ChangeUser(evt);
      }
    });
    ButtonP.add(UserB);
    ButtonP.add(Spacer1L);

    StatsB.setText("Statistics");
    StatsB.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        ShowStats(evt);
      }
    });
    ButtonP.add(StatsB);
    ButtonP.add(Spacer2L);

    PlayB.setText("Play");
    PlayB.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        Play(evt);
      }
    });
    ButtonP.add(PlayB);
    ButtonP.add(Spacer3L);

    HelpB.setText("Help");
    HelpB.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        Help(evt);
      }
    });
    ButtonP.add(HelpB);
    ButtonP.add(Spacer4L);

    ExitB.setText("Exit");
    ExitB.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        Exit(evt);
      }
    });
    ButtonP.add(ExitB);

    GroupLayout HomePLayout = new GroupLayout(HomeP);
    HomeP.setLayout(HomePLayout);
    HomePLayout.setHorizontalGroup(HomePLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(GroupLayout.Alignment.TRAILING, HomePLayout.createSequentialGroup()
        .addGroup(HomePLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
          .addComponent(ButtonP, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
          .addComponent(TitleP, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    HomePLayout.setVerticalGroup(HomePLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(HomePLayout.createSequentialGroup()
        .addComponent(TitleP, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(ButtonP, GroupLayout.PREFERRED_SIZE, 125, GroupLayout.PREFERRED_SIZE)
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(HomeP, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );
    layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(HomeP, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

	/**
	 * Changes the current user.
	 *
	 * @param evt Button Click
	 */
	private void ChangeUser(ActionEvent evt) {//GEN-FIRST:event_ChangeUser
		ChangeUser ChangeUser = new ChangeUser(); // Creates the ChangeUser Form object
		ChangeUser.setVisible(true);              // Makes the ChangeUser Form to be visible

		this.dispose();                           // Destroys the current form object
	}//GEN-LAST:event_ChangeUser

	/**
	 * Shows the statistics for the current user.
	 *
	 * @param evt Button Click
	 */
	private void ShowStats(ActionEvent evt) {//GEN-FIRST:event_ShowStats
		ViewStats ViewStats = new ViewStats(); // Creates the ViewStats Form object
		ViewStats.setVisible(true);            // Makes the ViewStats Form to be visible

		this.dispose();                        // Destroys the current form object
	}//GEN-LAST:event_ShowStats

	/**
	 * Starts the game.
	 *
	 * @param evt Button Click
	 */
	private void Play(ActionEvent evt) {//GEN-FIRST:event_Play
		Pre Pre = new Pre();  // Creates the Pre Form object
		Pre.setVisible(true); // Makes the Pre Form to be visible

		this.dispose();       // Destroys the current form object
	}//GEN-LAST:event_Play

	/**
	 * Exits the program.
	 *
	 * @param evt Button Click
	 */
	private void Exit(ActionEvent evt) {//GEN-FIRST:event_Exit
		if (JOptionPane.showConfirmDialog(null, "Are you sure?", "Abandon Ship?", JOptionPane.YES_NO_OPTION) == 0) {
			System.exit(0);
		}
	}//GEN-LAST:event_Exit

	/**
	 * A series of <code>JOptionPane.MessageDialog</code>-s for explaining the game.
	 * TODO: Need to write this.
	 *
	 * @param evt Button Click
	 */
  private void Help(ActionEvent evt) {//GEN-FIRST:event_Help
		boolean[] responses = {false, false, false};

		one:
		while (true) {
			responses[0] = JOptionPane.showConfirmDialog(null, this.Help1, "Help - 1", JOptionPane.YES_NO_OPTION) == 0;
			two:
			while (responses[0]) {   // One   -> Two
				responses[1] = JOptionPane.showConfirmDialog(null, this.Help2, "Help - 2", JOptionPane.YES_NO_OPTION) == 0;
				three:
				while (responses[1]) { // Two   -> Three
					responses[2] = JOptionPane.showConfirmDialog(null, this.Help3, "Help - 3", JOptionPane.YES_NO_OPTION) == 0;
					if (responses[2]) {  // Three -> Game
						return;
					} else {             // Three -> Two
						continue two;
					}
				}
				continue one;          // Two   -> One
			}
			return;                  // One   -> Game
		}
  }//GEN-LAST:event_Help

	/**
	 * Sets the Nimbus look and feel.
	 * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see:
	 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
	 *
	 * Creates and displays the form.
	 *
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		try {
			for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
			java.util.logging.Logger.getLogger(JShip.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
			System.out.println("ERROR: " + e);
		}

		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				new JShip().setVisible(true);
			}
		});
	}

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JPanel ButtonP;
  private JButton ExitB;
  private JPanel Help1;
  private JPanel Help2;
  private JPanel Help3;
  private JButton HelpB;
  private JPanel HomeP;
  private JButton PlayB;
  private JLabel Spacer1L;
  private JLabel Spacer2L;
  private JLabel Spacer3L;
  private JLabel Spacer4L;
  private JButton StatsB;
  private JLabel TitleL;
  private JPanel TitleP;
  private JButton UserB;
  private JLabel UserL;
  private JTextField UserTF;
  private JLabel jLabel1;
  private JLabel jLabel2;
  private JLabel jLabel3;
  // End of variables declaration//GEN-END:variables
}
