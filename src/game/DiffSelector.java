package game;

import javax.swing.*;
import java.awt.event.*;
import java.awt.GridLayout;

/**
 * Form for selecting the AI difficulty.
 * The form is visually skipped if the game mode selected is PvP.
 *
 * @author blackk100
 */
public class DiffSelector extends JFrame {

	private final boolean[] initVars;
	private final int type;
	private final String mode;

	/**
	 * AI 1 Difficulty:
	 *
	 * <pre>
	 * -1 - Sandbox       (Easy)
	 *  0 - Realistic     (Medium)
	 *  1 - Brutal        (Hard)
	 * </pre>
	 */
	private int AI1Diff = -1;

	/**
	 * AI 2 Difficulty (Present during EvE only):
	 *
	 * <pre>
	 * -2 - Disabled
	 * -1 - Sandbox       (Easy)
	 *  0 - Realistic     (Medium)
	 *  1 - Brutal        (Hard)
	 * </pre>
	 */
	private int AI2Diff = -1;

	/**
	 * Creates new form DiffSelector
	 *
	 * @param initVars
	 * @param type
	 * @param mode
	 */
	public DiffSelector(boolean[] initVars, int type, String mode) {
		initComponents();

		this.initVars = initVars;
		this.type = type;
		this.mode = mode;

		if (type == 0) {
			S2RB.setEnabled(true);
			R2RB.setEnabled(true);
			B2RB.setEnabled(true);
		}
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		Difficulty1BG = new ButtonGroup();
		Difficulty2BG = new ButtonGroup();
		jPanel1 = new JPanel();
		Difficulty1L = new JLabel();
		Difficulty1P = new JPanel();
		S1RB = new JRadioButton();
		R1RB = new JRadioButton();
		B1RB = new JRadioButton();
		Difficulty2L = new JLabel();
		Difficulty2P = new JPanel();
		S2RB = new JRadioButton();
		R2RB = new JRadioButton();
		B2RB = new JRadioButton();
		ButtonsP = new JPanel();
		GoBackB = new JButton();
		PlayB = new JButton();

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		setResizable(false);

		Difficulty1L.setLabelFor(Difficulty1P);
		Difficulty1L.setText("AI 1 Difficulty:");

		Difficulty1P.setLayout(new GridLayout(1, 3));

		Difficulty1BG.add(S1RB);
		S1RB.setSelected(true);
		S1RB.setText("Sandbox");
		S1RB.setActionCommand("S");
		S1RB.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				Difficulty1Changed(evt);
			}
		});
		Difficulty1P.add(S1RB);

		Difficulty1BG.add(R1RB);
		R1RB.setText("Realistic");
		R1RB.setActionCommand("R");
		R1RB.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				Difficulty1Changed(evt);
			}
		});
		Difficulty1P.add(R1RB);

		Difficulty1BG.add(B1RB);
		B1RB.setText("Brutal");
		B1RB.setActionCommand("B");
		B1RB.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				Difficulty1Changed(evt);
			}
		});
		Difficulty1P.add(B1RB);

		Difficulty2L.setLabelFor(Difficulty2P);
		Difficulty2L.setText("AI 2 Difficulty:");

		Difficulty2P.setLayout(new GridLayout(1, 3));

		Difficulty2BG.add(S2RB);
		S2RB.setSelected(true);
		S2RB.setText("Sandbox");
		S2RB.setActionCommand("S");
		S2RB.setEnabled(false);
		S2RB.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				Difficulty2Changed(evt);
			}
		});
		Difficulty2P.add(S2RB);

		Difficulty2BG.add(R2RB);
		R2RB.setText("Realistic");
		R2RB.setActionCommand("R");
		R2RB.setEnabled(false);
		R2RB.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				Difficulty2Changed(evt);
			}
		});
		Difficulty2P.add(R2RB);

		Difficulty2BG.add(B2RB);
		B2RB.setText("Brutal");
		B2RB.setActionCommand("B");
		B2RB.setEnabled(false);
		B2RB.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				Difficulty2Changed(evt);
			}
		});
		Difficulty2P.add(B2RB);

		ButtonsP.setLayout(new GridLayout(1, 2, 100, 0));

		GoBackB.setText("Go Back");
		GoBackB.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				GoBackBGoBack(evt);
			}
		});
		ButtonsP.add(GoBackB);

		PlayB.setText("Play");
		PlayB.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				Play(evt);
			}
		});
		ButtonsP.add(PlayB);

		GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
			jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(jPanel1Layout.createSequentialGroup()
				.addContainerGap()
				.addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
					.addComponent(ButtonsP, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addGroup(jPanel1Layout.createSequentialGroup()
						.addComponent(Difficulty1L, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGap(18, 18, 18)
						.addComponent(Difficulty1P, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addGroup(jPanel1Layout.createSequentialGroup()
						.addComponent(Difficulty2L, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGap(18, 18, 18)
						.addComponent(Difficulty2P, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
				.addContainerGap())
		);
		jPanel1Layout.setVerticalGroup(
			jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(jPanel1Layout.createSequentialGroup()
				.addContainerGap()
				.addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
					.addComponent(Difficulty1P, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addComponent(Difficulty1L, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE))
				.addGap(18, 18, 18)
				.addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
					.addComponent(Difficulty2P, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addComponent(Difficulty2L, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE))
				.addGap(18, 18, 18)
				.addComponent(ButtonsP, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
				.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);

		GroupLayout layout = new GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
			layout.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(layout.createSequentialGroup()
				.addContainerGap()
				.addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addContainerGap())
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(layout.createSequentialGroup()
				.addContainerGap()
				.addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * Sets the Difficulty of AI1
	 *
	 * @param evt
	 */
	private void Difficulty1Changed(ActionEvent evt) {//GEN-FIRST:event_Difficulty1Changed
		String diff = this.Difficulty1BG.getSelection().getActionCommand();
		if (diff.equals("S")) {
			this.AI1Diff = -1;
		} else if (diff.equals("R")) {
			this.AI1Diff = 0;
		} else if (diff.equals("B")) {
			this.AI1Diff = 1;
		}
	}//GEN-LAST:event_Difficulty1Changed

	/**
	 * Sets the Difficulty of AI2
	 *
	 * @param evt
	 */
	private void Difficulty2Changed(ActionEvent evt) {//GEN-FIRST:event_Difficulty2Changed
		String diff = this.Difficulty2BG.getSelection().getActionCommand();
		if (diff.equals("S")) {
			this.AI2Diff = -1;
		} else if (diff.equals("R")) {
			this.AI2Diff = 0;
		} else if (diff.equals("B")) {
			this.AI2Diff = 1;
		}
	}//GEN-LAST:event_Difficulty2Changed

	/**
	 * Goes back to the Pre form
	 *
	 * @param evt
	 */
	private void GoBackBGoBack(ActionEvent evt) {//GEN-FIRST:event_GoBackBGoBack
		Pre Pre = new Pre(this.initVars, this.type, this.mode); // Creates the JShip Form object
		Pre.setVisible(true);                                   // Makes the JShip Form to be visible

		this.dispose();                                         // Destroys the current form object
	}//GEN-LAST:event_GoBackBGoBack

	/**
	 * Starts the game
	 *
	 * @param evt
	 */
	private void Play(ActionEvent evt) {//GEN-FIRST:event_Play
		Game Game = new Game(
						this.initVars, this.type, this.mode, this.AI1Diff, this.AI2Diff); // Creates the JShip Form object
		Game.setVisible(true);                                                    // Makes the JShip Form to be visible

		this.dispose();                                                           // Destroys the current form object
	}//GEN-LAST:event_Play

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private JRadioButton B1RB;
	private JRadioButton B2RB;
	private JPanel ButtonsP;
	private ButtonGroup Difficulty1BG;
	private JLabel Difficulty1L;
	private JPanel Difficulty1P;
	private ButtonGroup Difficulty2BG;
	private JLabel Difficulty2L;
	private JPanel Difficulty2P;
	private JButton GoBackB;
	private JButton PlayB;
	private JRadioButton R1RB;
	private JRadioButton R2RB;
	private JRadioButton S1RB;
	private JRadioButton S2RB;
	private JPanel jPanel1;
	// End of variables declaration//GEN-END:variables
}
