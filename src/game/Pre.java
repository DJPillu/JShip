package game;

import javax.swing.JOptionPane;
import jship.JShip;
import shop.Shop;


/**
 *
 * @author blackk100
 */
public class Pre extends javax.swing.JFrame {

	/**
	 * Round Initialization Variables:
	 *
	 * <pre>
	 * I-----------I-----------I-----------I
	 * I Index No. I   false   I    true   I
	 * I-----------I-----------I-----------I
	 * I     0     I  10 x 10  I  15 x 15  I
	 * I-----------I-----------------------I
	 * I     1     I    Aircraft Carrier   I
	 * I     2     I       Battleship      I
	 * I     3     I        Cruiser        I
	 * I     4     I       Destroyer       I
	 * I     5     I      Patrol Boat      I
	 * I-----------I-----------------------I
	 * </pre>
	 */
	private boolean[] initVars = {false, false, false, false, false, false};
	/**
	 * Game Type:
	 * <pre>
	 *  1 - PvP
	 *  0 - PvE
	 * -1 - EvE
	 * </pre>
	 */
	private int type = 0;
	/**
	 * Game Mode:
	 * <pre>
	 * C - Classic
	 * S - Salvo
	 * </pre>
	 */
	private String mode = "C";

	/**
	 * Creates a new form Pre
	 *
	 * Used when coming from the Main Screen
	 */
	public Pre() {
		initComponents();
	}

	/**
	 * Creates a new form Pre
	 *
	 * Used when coming from DiffSelector
	 *
	 * @param initVars
	 * @param type
	 * @param mode
	 */
	public Pre(boolean[] initVars, int type, String mode) {
		initComponents();

		if (initVars[0] == true) {
			this.Grid15RB.setSelected(true);

			if (initVars[5] == true) {
				this.PatrolCB.setEnabled(true);
				this.PatrolCB.setSelected(true);
			}
		}
		if (initVars[1] == true) {
			this.CarrierCB.setSelected(true);
		}
		if (initVars[2] == true) {
			this.BattleshipCB.setSelected(true);
		}
		if (initVars[3] == true) {
			this.CruiserCB.setSelected(true);
		}
		if (initVars[4] == true) {
			this.DestroyerCB.setSelected(true);
		}

		if (type == -1) {
			this.EvERB.setSelected(true);
		} else if (type == 0) {
			this.PvERB.setSelected(true);
		} else if (type == 1) {
			this.PvPRB.setSelected(true);
		}

		if (mode.equals("C")) {
			this.ClassRB.setSelected(true);
		} else if (mode.equals("S")) {
			this.SalvoRB.setSelected(true);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    SizeBG = new javax.swing.ButtonGroup();
    ModeBG = new javax.swing.ButtonGroup();
    TypeBG = new javax.swing.ButtonGroup();
    PreP = new javax.swing.JPanel();
    TitleL = new javax.swing.JLabel();
    GridL = new javax.swing.JLabel();
    GridP = new javax.swing.JPanel();
    Grid10RB = new javax.swing.JRadioButton();
    Grid15RB = new javax.swing.JRadioButton();
    ModeL = new javax.swing.JLabel();
    ModeP = new javax.swing.JPanel();
    ClassRB = new javax.swing.JRadioButton();
    SalvoRB = new javax.swing.JRadioButton();
    TypeL = new javax.swing.JLabel();
    TypeP = new javax.swing.JPanel();
    PvERB = new javax.swing.JRadioButton();
    PvPRB = new javax.swing.JRadioButton();
    EvERB = new javax.swing.JRadioButton();
    ShipsL = new javax.swing.JLabel();
    ShipsP = new javax.swing.JPanel();
    CarrierCB = new javax.swing.JCheckBox();
    BattleshipCB = new javax.swing.JCheckBox();
    CruiserCB = new javax.swing.JCheckBox();
    DestroyerCB = new javax.swing.JCheckBox();
    PatrolCB = new javax.swing.JCheckBox();
    ButtonsP = new javax.swing.JPanel();
    GoBackB = new javax.swing.JButton();
    ShopB = new javax.swing.JButton();
    PlayB = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    TitleL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    TitleL.setText("Game Setup");

    GridL.setLabelFor(GridL);
    GridL.setText("Grid Size:");

    GridP.setLayout(new java.awt.GridLayout(1, 2));

    SizeBG.add(Grid10RB);
    Grid10RB.setSelected(true);
    Grid10RB.setText("10 x 10");
    Grid10RB.setActionCommand("10");
    Grid10RB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        SizeChanged(evt);
      }
    });
    GridP.add(Grid10RB);

    SizeBG.add(Grid15RB);
    Grid15RB.setText("15 x 15");
    Grid15RB.setActionCommand("15");
    Grid15RB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        SizeChanged(evt);
      }
    });
    GridP.add(Grid15RB);

    ModeL.setLabelFor(ModeP);
    ModeL.setText("Game Mode:");

    ModeP.setLayout(new java.awt.GridLayout(1, 2));

    ModeBG.add(ClassRB);
    ClassRB.setSelected(true);
    ClassRB.setText("Classic");
    ClassRB.setActionCommand("C");
    ModeP.add(ClassRB);

    ModeBG.add(SalvoRB);
    SalvoRB.setText("Salvo");
    SalvoRB.setActionCommand("S");
    ModeP.add(SalvoRB);

    TypeL.setLabelFor(TypeP);
    TypeL.setText("Game Type:");

    TypeP.setLayout(new java.awt.GridLayout(1, 3));

    TypeBG.add(PvERB);
    PvERB.setSelected(true);
    PvERB.setText("Player vs AI");
    PvERB.setActionCommand("PvE");
    PvERB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        TypeChanged(evt);
      }
    });
    TypeP.add(PvERB);

    TypeBG.add(PvPRB);
    PvPRB.setText("Player vs Player");
    PvPRB.setActionCommand("PvP");
    PvPRB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        TypeChanged(evt);
      }
    });
    TypeP.add(PvPRB);

    TypeBG.add(EvERB);
    EvERB.setText("AI vs AI");
    EvERB.setActionCommand("EvE");
    EvERB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        TypeChanged(evt);
      }
    });
    TypeP.add(EvERB);

    ShipsL.setLabelFor(ShipsP);
    ShipsL.setText("Ships Available:");

    ShipsP.setLayout(new java.awt.GridLayout(2, 3));

    CarrierCB.setText("<html>Aircraft Carrier<br>5 Spaces; x1</html>");
    ShipsP.add(CarrierCB);

    BattleshipCB.setText("<html>Battleship<br>4 Spaces; x1</html>");
    ShipsP.add(BattleshipCB);

    CruiserCB.setText("<html>Cruiser<br>3 Spaces; x2</html>");
    ShipsP.add(CruiserCB);

    DestroyerCB.setText("<html>Destroyer<br>2 Spaces; x2</html>");
    ShipsP.add(DestroyerCB);

    PatrolCB.setText("<html>Patrol Boat<br>1 Space; x5</html>");
    PatrolCB.setEnabled(false);
    ShipsP.add(PatrolCB);

    ButtonsP.setLayout(new java.awt.GridLayout(1, 3, 100, 0));

    GoBackB.setText("Go Back");
    GoBackB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        GoBack(evt);
      }
    });
    ButtonsP.add(GoBackB);

    ShopB.setText("Shop");
    ShopB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        OpenShop(evt);
      }
    });
    ButtonsP.add(ShopB);

    PlayB.setText("Next");
    PlayB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        Next(evt);
      }
    });
    ButtonsP.add(PlayB);

    javax.swing.GroupLayout PrePLayout = new javax.swing.GroupLayout(PreP);
    PreP.setLayout(PrePLayout);
    PrePLayout.setHorizontalGroup(
      PrePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(PrePLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(PrePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(TitleL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(ButtonsP, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
          .addGroup(PrePLayout.createSequentialGroup()
            .addGroup(PrePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(ModeL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(TypeL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(ShipsL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(GridL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(18, 18, Short.MAX_VALUE)
            .addGroup(PrePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(ShipsP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(ModeP, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
              .addComponent(GridP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(TypeP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        .addContainerGap())
    );
    PrePLayout.setVerticalGroup(
      PrePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(PrePLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(TitleL)
        .addGap(18, 18, 18)
        .addGroup(PrePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(GridP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(GridL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGap(18, 18, 18)
        .addGroup(PrePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(ModeP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(ModeL, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(PrePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(TypeL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(TypeP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(PrePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(ShipsL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(ShipsP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(ButtonsP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(PreP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(PreP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

	/**
	 * Goes back to the Main form
	 *
	 * @param evt
	 */
  private void GoBack(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoBack
		JShip JShip = new JShip(); // Creates the JShip Form object
		JShip.setVisible(true);    // Makes the JShip Form to be visible

		this.dispose();            // Destroys the current form object
  }//GEN-LAST:event_GoBack

	/**
	 * Starts the Game.
	 *
	 * @param evt
	 */
  private void Next(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next
		this.mode = this.ModeBG.getSelection().getActionCommand();
		this.initVars[1] = this.CarrierCB.isSelected();
		this.initVars[2] = this.BattleshipCB.isSelected();
		this.initVars[3] = this.CruiserCB.isSelected();
		this.initVars[4] = this.DestroyerCB.isSelected();
		this.initVars[5] = this.PatrolCB.isSelected();
		System.out.println("Game mode and ship type selections obtained!");

		boolean flag = true;
		for (int i = 1; i < 6; i++) {
			if (this.initVars[i] == true) {
				flag = false;
			}
		}
		System.out.println("Ship type selections verified!");

		if (flag) {
			System.out.println("No Ship Type is selected! Please select a ship type!");
			JOptionPane.showMessageDialog(null, "No Ship Type is selected! Please select a ship type!", "No Ship Selected", JOptionPane.WARNING_MESSAGE);
		} else {
			switch (this.type) {
				case -1: // EvE
					System.out.println("Statistics will not be tracked for this EvE round.");
					JOptionPane.showMessageDialog(null, "Statistics will not be tracked for this round.", "Stats not Counted", JOptionPane.INFORMATION_MESSAGE);
					break;
				case 0:  // PvE
					break;
				case 1:  // PvP
					System.out.println("Statistics will not be tracked for this PvP round.");
					JOptionPane.showMessageDialog(null, "Statistics will not be tracked for this round.", "Stats not Counted", JOptionPane.INFORMATION_MESSAGE);
					break;
				case -2: // Unknown Return Value
				default:
					System.out.println("An Error occurred! Please contact the developer!");
					JOptionPane.showMessageDialog(null, "An Error occurred! Please contact the developer!", "An Error occured", JOptionPane.ERROR_MESSAGE);
					break;
			}
			if (this.type == -1 || this.type == 0 || this.type == 1) {
				DiffSelector DiffSelector = new DiffSelector(this.initVars, this.type, this.mode); // Creates the DiffSelector form object
				DiffSelector.setVisible(true);                                                             // Makes the DiffSelector form to be visible

				this.dispose();                                                                            // Destroys the current form object
			}
		}

		System.out.println("Play() ended!\n");
  }//GEN-LAST:event_Next

	/**
	 * Opens the in-game shop.
	 *
	 * @param evt
	 */
  private void OpenShop(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenShop
		Shop Shop = new Shop(1); // Creates the Shop Form object
		Shop.setVisible(true);   // Makes the Shop Form to be visible

		this.dispose();          // Destroys the current form object
  }//GEN-LAST:event_OpenShop

	/**
	 * Sets the Grid Size variable
	 *
	 * @param evt
	 */
  private void SizeChanged(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SizeChanged
		int size = Integer.parseInt(this.SizeBG.getSelection().getActionCommand());
		switch (size) {
			case 15:
				this.PatrolCB.setEnabled(true);
				this.initVars[0] = true;
				break;
			case 10:
			default:
				this.PatrolCB.setSelected(false);
				this.PatrolCB.setEnabled(false);
				this.initVars[0] = false;
				break;
		}
  }//GEN-LAST:event_SizeChanged

	/**
	 * Sets the Game Type variable
	 *
	 * @param evt
	 */
  private void TypeChanged(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypeChanged
		String diff = this.TypeBG.getSelection().getActionCommand();
		switch (diff) {
			case "EvE":
				this.type = -1;
				break;
			case "PvE":
				this.type = 0;
				break;
			case "PvP":
				this.type = 1;
				break;
			default:  // Unknown Return Value
				this.type = -2;
				break;
		}
  }//GEN-LAST:event_TypeChanged

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox BattleshipCB;
  private javax.swing.JPanel ButtonsP;
  private javax.swing.JCheckBox CarrierCB;
  private javax.swing.JRadioButton ClassRB;
  private javax.swing.JCheckBox CruiserCB;
  private javax.swing.JCheckBox DestroyerCB;
  private javax.swing.JRadioButton EvERB;
  private javax.swing.JButton GoBackB;
  private javax.swing.JRadioButton Grid10RB;
  private javax.swing.JRadioButton Grid15RB;
  private javax.swing.JLabel GridL;
  private javax.swing.JPanel GridP;
  private javax.swing.ButtonGroup ModeBG;
  private javax.swing.JLabel ModeL;
  private javax.swing.JPanel ModeP;
  private javax.swing.JCheckBox PatrolCB;
  private javax.swing.JButton PlayB;
  private javax.swing.JPanel PreP;
  private javax.swing.JRadioButton PvERB;
  private javax.swing.JRadioButton PvPRB;
  private javax.swing.JRadioButton SalvoRB;
  private javax.swing.JLabel ShipsL;
  private javax.swing.JPanel ShipsP;
  private javax.swing.JButton ShopB;
  private javax.swing.ButtonGroup SizeBG;
  private javax.swing.JLabel TitleL;
  private javax.swing.ButtonGroup TypeBG;
  private javax.swing.JLabel TypeL;
  private javax.swing.JPanel TypeP;
  // End of variables declaration//GEN-END:variables
}
